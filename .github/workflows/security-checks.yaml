name: Security Checks

on: [push, pull_request]

env:
  DOCKER_USER_NAME: ${{secrets.DOCKER_USER_NAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_NAME: ${{secrets.PRODUCT_REPO_NAME}}

# jobs:
#   scan:
#     name: Security Scan
#     runs-on: ubuntu-latest
#     steps:    
#       - name: Check out code
#         uses: actions/checkout@v3

#       - name: Run gitleaks security scan
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Gitleaks
#         uses: gitleaks/gitleaks-action@v2
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

#       - name: Set up Docker
#         uses: docker-practice/actions-setup-docker@master
#       - name: Docker login
#         run: |
#           docker login -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
#       - name: Build product service docker image
#         run: |
#           cd product_service
#           docker build . --file Dockerfile --tag $DOCKER_USER_NAME/$PRODUCT_REPO_NAME
#       - name: Push product service docker image
#         run: docker push $DOCKER_USER_NAME/$PRODUCT_REPO_NAME    

#       - name: Run Docker Scout security scan
#         id: docker-scout
#         uses: docker/scout-action@v1
#         with:
#           command: quickview,cves,recommendations
#           only-severities: critical,high
#           sarif-file: scout-report.sarif
#           to-latest: true
#           ignore-base: true
#           ignore-unchanged: true
#           only-fixed: true

#       - name: Upload Docker Scout report
#         uses: actions/upload-artifact@v3
#         if: always()
#         with:
#           name: docker-scout-findings
#           path: scout-report.sarif

jobs:
  scan:
    name: Gitleaks security scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Gitleaks    
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

  product-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@master
    - name: Docker login
      run: |
        docker login -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
    - name: Build product service docker image
      run: |
        cd product_service
        docker build . --file Dockerfile --tag $DOCKER_USER_NAME/$PRODUCT_REPO_NAME
    - name: Push user service docker image
      run: docker push $DOCKER_USER_NAME/$PRODUCT_REPO_NAME                

  scan:
    name: Docker Scout security scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Run Docker Scout security scan
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: quickview,cves,recommendations
          only-severities: critical,high
          sarif-file: scout-report.sarif
          to-latest: true
          ignore-base: true
          ignore-unchanged: true
          only-fixed: true

  security-report:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Upload Docker Scout report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif