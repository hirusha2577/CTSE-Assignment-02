name: CTSE-Assignment-02

on:
  push:
    branches: [ code_setup ]
  workflow_dispatch:

env:
  DOCKER_USER_NAME: ${{secrets.DOCKER_USER_NAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_NAME: ${{secrets.PRODUCT_REPO_NAME}}
  GITHUB_TOKEN: ${{secrets.TOKEN_GITHUB}}
  # PROJECT_ID: ${{secrets.GKE_PROJECT}}
  # GKE_CLUSTER: clay-cluster-1
  # GKE_ZONE: us-central1
  # DEPLOYMENT_NAME: github-actions-gke-deployment
  # IMAGE: github-actions-gke-image
  # TAG: 1.0.0 

jobs:
  eslint:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    - name: Install dependencies
      run: npm install
      working-directory: product_service
    - name: Run ESLint
      run: npx eslint . --rule "@typescript-eslint/naming-convention:off" --rule "@typescript-eslint/object-curly-spacing:off" --rule "semi:off" --rule "quotes:off" --rule "space-in-parens:off"
      working-directory: product_service

  scan:
    name: npm audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: npm ci
      - uses: oke-py/npm-audit-action@v2
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          issue_assignees: oke-py
          issue_labels: vulnerability,test
          dedupe_issues: true    

  product-service:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@master
    - name: Docker login
      run: |
        docker login -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
    - name: Build product service docker image
      run: |
        cd product_service
        docker build . --file Dockerfile --tag $DOCKER_USER_NAME/$PRODUCT_REPO_NAME
    - name: Push user service docker image
      run: docker push $DOCKER_USER_NAME/$PRODUCT_REPO_NAME

    - name: Docker Scout
      id: docker-scout
      uses: docker/scout-action@v1
      with:
        command: quickview,cves,recommendations
        only-severities: critical,high
        sarif-file: scout-report.sarif
        to-latest: true
        ignore-base: true
        ignore-unchanged: true
        only-fixed: true

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif    


  # deploy:
  #   needs: [product-service]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: üõ† Configure Kubernetes Credentials
  #     uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
  #     env:
  #       ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  #     with:
  #       service_account_key: ${{secrets.GKE_SA_KEY}}
  #       project_id: ${{secrets.GKE_PROJECT}}
  #   - name: ‚¨ÜÔ∏è Deploy to K8s
  #     run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
           